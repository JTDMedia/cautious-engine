--[[
          _____                _____                    _____                            _____                    _____                    _____          
         /\    \              /\    \                  /\    \                          /\    \                  /\    \                  /\    \         
        /::\    \            /::\    \                /::\    \                        /::\____\                /::\____\                /::\    \        
        \:::\    \           \:::\    \              /::::\    \                      /:::/    /               /:::/    /               /::::\    \       
         \:::\    \           \:::\    \            /::::::\    \                    /:::/    /               /:::/    /               /::::::\    \      
          \:::\    \           \:::\    \          /:::/\:::\    \                  /:::/    /               /:::/    /               /:::/\:::\    \     
           \:::\    \           \:::\    \        /:::/  \:::\    \                /:::/____/               /:::/    /               /:::/__\:::\    \    
           /::::\    \          /::::\    \      /:::/    \:::\    \              /::::\    \              /:::/    /               /::::\   \:::\    \   
  _____   /::::::\    \        /::::::\    \    /:::/    / \:::\    \            /::::::\    \   _____    /:::/    /      _____    /::::::\   \:::\    \  
 /\    \ /:::/\:::\    \      /:::/\:::\    \  /:::/    /   \:::\ ___\          /:::/\:::\    \ /\    \  /:::/____/      /\    \  /:::/\:::\   \:::\ ___\ 
/::\    /:::/  \:::\____\    /:::/  \:::\____\/:::/____/     \:::|    |        /:::/  \:::\    /::\____\|:::|    /      /::\____\/:::/__\:::\   \:::|    |
\:::\  /:::/    \::/    /   /:::/    \::/    /\:::\    \     /:::|____|        \::/    \:::\  /:::/    /|:::|____\     /:::/    /\:::\   \:::\  /:::|____|
 \:::\/:::/    / \/____/   /:::/    / \/____/  \:::\    \   /:::/    /          \/____/ \:::\/:::/    /  \:::\    \   /:::/    /  \:::\   \:::\/:::/    / 
  \::::::/    /           /:::/    /            \:::\    \ /:::/    /                    \::::::/    /    \:::\    \ /:::/    /    \:::\   \::::::/    /  
   \::::/    /           /:::/    /              \:::\    /:::/    /                      \::::/    /      \:::\    /:::/    /      \:::\   \::::/    /   
    \::/    /            \::/    /                \:::\  /:::/    /                       /:::/    /        \:::\__/:::/    /        \:::\  /:::/    /    
     \/____/              \/____/                  \:::\/:::/    /                       /:::/    /          \::::::::/    /          \:::\/:::/    /     
                                                    \::::::/    /                       /:::/    /            \::::::/    /            \::::::/    /      
                                                     \::::/    /                       /:::/    /              \::::/    /              \::::/    /       
                                                      \::/____/                        \::/    /                \::/____/                \::/____/        
                                                       ~~                               \/____/                  ~~                       ~~              
                                                                                                                                                          
===================================
You can load this script with:
loadstring(game:HttpGet("https://raw.githubusercontent.com/JTDMedia/cautious-engine/refs/heads/main/obfuscated"))()
Discord: https://dsc.gg/dihcord

]]

--[[
https://github.com/Footagesus/WindUI/blob/main/Example.lua
https://footagesus.github.io/WindUI-Docs/docs
https://lucide.dev/icons/
]]
-- Load Basics

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local frequest, fsetclipboard = request or http_request or syn_request, setclipboard or toclipboard
function missing(t, f, fallback)
	if type(f) == t then return f end
	return fallback
end
cloneref = missing("function", cloneref, function(...) return ... end)

COREGUI = cloneref(game:GetService("CoreGui"))
Players = cloneref(game:GetService("Players"))
UserInputService = cloneref(game:GetService("UserInputService"))
TweenService = cloneref(game:GetService("TweenService"))
HttpService = cloneref(game:GetService("HttpService"))
MarketplaceService = cloneref(game:GetService("MarketplaceService"))
RunService = cloneref(game:GetService("RunService"))
TeleportService = cloneref(game:GetService("TeleportService"))
StarterGui = cloneref(game:GetService("StarterGui"))
GuiService = cloneref(game:GetService("GuiService"))
Lighting = cloneref(game:GetService("Lighting"))
ContextActionService = cloneref(game:GetService("ContextActionService"))
ReplicatedStorage = cloneref(game:GetService("ReplicatedStorage"))
GroupService = cloneref(game:GetService("GroupService"))
PathService = cloneref(game:GetService("PathfindingService"))
SoundService = cloneref(game:GetService("SoundService"))
Teams = cloneref(game:GetService("Teams"))
StarterPlayer = cloneref(game:GetService("StarterPlayer"))
InsertService = cloneref(game:GetService("InsertService"))
ChatService = cloneref(game:GetService("Chat"))
ProximityPromptService = cloneref(game:GetService("ProximityPromptService"))
ContentProvider = cloneref(game:GetService("ContentProvider"))
StatsService = cloneref(game:GetService("Stats"))
MaterialService = cloneref(game:GetService("MaterialService"))
AvatarEditorService = cloneref(game:GetService("AvatarEditorService"))
TextService = cloneref(game:GetService("TextService"))
TextChatService = cloneref(game:GetService("TextChatService"))
CaptureService = cloneref(game:GetService("CaptureService"))
VoiceChatService = cloneref(game:GetService("VoiceChatService"))

-- Window and keysystem

WindUI.Services.keysystem = {
	Name = "Keysystem",
	Icon = "door-open", -- lucide or rbxassetid or raw link to img
	Args = {"ServiceId"}, --       <- \
	--                                   |
	New = function(ServiceId) -- <------ | Args!!!!!!!!!!!!
		function validateKey(key)
			if not key or key == "" then
				return false, "Key is missing!"
			end

			local validationUrl = "https://bdstudios.nl/keysystem/validation?key=" .. tostring(key)
			local success, response =
				pcall(
					function()
						return frequest(
							{
								Url = validationUrl,
								Method = "GET",
								Headers = {["User-Agent"] = "Roblox/Exploit"}
							}
						)
					end
				)

			if not success then
				return false, "Request failed!"
			end

			if response.Body == "true" then
				return true, "Key is valid!"
			elseif response.Body == "false" then
				return false, "Key is invalid!"
			end
		end

		function copyLink()
			return fsetclipboard("https://bdstudios.nl/keysystem")
		end

		return {
			--↓↓ do not change this!!
			Verify = validateKey, -- <-- important!!!
			Copy = copyLink -- <-- important!!!
		}
	end
}

local Window =
	WindUI:CreateWindow(
		{
			Title = "JTD Hub",
			Icon = "house",
			Author = "JustTheDev",
			Folder = "JTDHub",
			Acrylic = true,
			HideSearchBar = false,
			KeySystem = {
				Note = "Get a key",
				API = {
					{
						-- custom service
						Type = "keysystem", -- type
						ServiceId = 1234 -- service id
					}
				}
			}
		}
	)
Window:IsResizable(true)
WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")
Window:EditOpenButton(
	{
		Title = "Open JTD Hub",
		Icon = "ratio",
		CornerRadius = UDim.new(0, 16),
		StrokeThickness = 2,
		Color = ColorSequence.new(Color3.fromHex("FF0F7B"), Color3.fromHex("F89B29")), -- gradient
		OnlyMobile = false,
		Enabled = true,
		Draggable = true
	}
)
Window:DisableTopbarButtons(
	{
		"Fullscreen"
	}
)

Window:Tag(
	{
		Title = "v1.0",
		Color = Color3.fromHex("#30ff6a")
	}
)

Window:Tag(
	{
		Title = "Beta",
		Color = Color3.fromHex("#308dff")
	}
)

local TimeTag =
	Window:Tag(
		{
			Title = "--:--",
			Color = Color3.fromHex("#ffd930")
		}
	)
task.spawn(
	function()
		while true do
			local now = os.date("*t")
			local hours = string.format("%02d", now.hour)
			local minutes = string.format("%02d", now.min)

			TimeTag:SetTitle(hours .. ":" .. minutes)

			task.wait(0.06)
		end
	end
)

-- Define global functions

function NotifyMessage(message)
	WindUI:Notify(
		{
			Title = "Notification",
			Content = message,
			Duration = 3,
			Icon = "bell"
		}
	)
end

function KeepOnlyLetters(input)
	return input:gsub("[^A-Za-z]", "")
end

function GetCurrentGameName()
	local UniverseId = game.GameId

	local UniverseData = "https://games.roblox.com/v1/games?universeIds=" .. UniverseId
	local success, response =
		pcall(
			function()
				return frequest(
					{
						Url = UniverseData,
						Method = "GET",
						Headers = {["User-Agent"] = "Roblox/Firefox"}
					}
				)
			end
		)

	if not success then
		return false, "Request failed!"
	end
	local data = HttpService:JSONDecode(response.Body)
	return data.data[1].name
end

function r15(plr)
	if plr.Character:FindFirstChildOfClass('Humanoid').RigType == Enum.HumanoidRigType.R15 then
		return true
	end
end


function randomString()
	local length = math.random(10,20)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

function getRoot(char)
	local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
	return rootPart
end

IsOnMobile = table.find({Enum.Platform.Android, Enum.Platform.IOS}, UserInputService:GetPlatform())

-- Fly

FLYING = false
QEfly = true
iyflyspeed = 1
vehicleflyspeed = 1
function sFLY(vfly)
	local plr = Players.LocalPlayer
	local char = plr.Character or plr.CharacterAdded:Wait()
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if not humanoid then
		repeat task.wait() until char:FindFirstChildOfClass("Humanoid")
		humanoid = char:FindFirstChildOfClass("Humanoid")
	end

	if flyKeyDown or flyKeyUp then
		flyKeyDown:Disconnect()
		flyKeyUp:Disconnect()
	end

	local T = getRoot(char)
	local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
	local SPEED = 0

	local function FLY()
		FLYING = true
		local BG = Instance.new('BodyGyro')
		local BV = Instance.new('BodyVelocity')
		BG.P = 9e4
		BG.Parent = T
		BV.Parent = T
		BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.CFrame = T.CFrame
		BV.Velocity = Vector3.new(0, 0, 0)
		BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
		task.spawn(function()
			repeat task.wait()
				local camera = workspace.CurrentCamera
				if not vfly and humanoid then
					humanoid.PlatformStand = true
				end

				if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
					SPEED = 50
				elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
					SPEED = 0
				end
				if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
					BV.Velocity = ((camera.CFrame.LookVector * (CONTROL.F + CONTROL.B)) + ((camera.CFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - camera.CFrame.p)) * SPEED
					lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
				elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
					BV.Velocity = ((camera.CFrame.LookVector * (lCONTROL.F + lCONTROL.B)) + ((camera.CFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - camera.CFrame.p)) * SPEED
				else
					BV.Velocity = Vector3.new(0, 0, 0)
				end
				BG.CFrame = camera.CFrame
			until not FLYING
			CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			SPEED = 0
			BG:Destroy()
			BV:Destroy()

			if humanoid then humanoid.PlatformStand = false end
		end)
	end

	flyKeyDown = UserInputService.InputBegan:Connect(function(input, processed)
		if input.KeyCode == Enum.KeyCode.W then
			CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
		elseif input.KeyCode == Enum.KeyCode.S then
			CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
		elseif input.KeyCode == Enum.KeyCode.A then
			CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
		elseif input.KeyCode == Enum.KeyCode.D then
			CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
		elseif input.KeyCode == Enum.KeyCode.E and QEfly then
			CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
		elseif input.KeyCode == Enum.KeyCode.Q and QEfly then
			CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
		end
		pcall(function() game.Workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
	end)

	flyKeyUp = UserInputService.InputEnded:Connect(function(input, processed)
		if input.KeyCode == Enum.KeyCode.W then
			CONTROL.F = 0
		elseif input.KeyCode == Enum.KeyCode.S then
			CONTROL.B = 0
		elseif input.KeyCode == Enum.KeyCode.A then
			CONTROL.L = 0
		elseif input.KeyCode == Enum.KeyCode.D then
			CONTROL.R = 0
		elseif input.KeyCode == Enum.KeyCode.E then
			CONTROL.Q = 0
		elseif input.KeyCode == Enum.KeyCode.Q then
			CONTROL.E = 0
		end
	end)
	FLY()
end

function NOFLY()
	FLYING = false
	if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
	if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
		Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
	end
	pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
end

local velocityHandlerName = randomString()
local gyroHandlerName = randomString()
local mfly1
local mfly2

local unmobilefly = function(speaker)
	pcall(function()
		FLYING = false
		local root = getRoot(speaker.Character)
		root:FindFirstChild(velocityHandlerName):Destroy()
		root:FindFirstChild(gyroHandlerName):Destroy()
		speaker.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
		mfly1:Disconnect()
		mfly2:Disconnect()
	end)
end

local mobilefly = function(speaker, vfly)
	unmobilefly(speaker)
	FLYING = true

	local root = getRoot(speaker.Character)
	local camera = workspace.CurrentCamera
	local v3none = Vector3.new()
	local v3zero = Vector3.new(0, 0, 0)
	local v3inf = Vector3.new(9e9, 9e9, 9e9)

	local controlModule = require(speaker.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
	local bv = Instance.new("BodyVelocity")
	bv.Name = velocityHandlerName
	bv.Parent = root
	bv.MaxForce = v3zero
	bv.Velocity = v3zero

	local bg = Instance.new("BodyGyro")
	bg.Name = gyroHandlerName
	bg.Parent = root
	bg.MaxTorque = v3inf
	bg.P = 1000
	bg.D = 50

	mfly1 = speaker.CharacterAdded:Connect(function()
		local bv = Instance.new("BodyVelocity")
		bv.Name = velocityHandlerName
		bv.Parent = root
		bv.MaxForce = v3zero
		bv.Velocity = v3zero

		local bg = Instance.new("BodyGyro")
		bg.Name = gyroHandlerName
		bg.Parent = root
		bg.MaxTorque = v3inf
		bg.P = 1000
		bg.D = 50
	end)

	mfly2 = RunService.RenderStepped:Connect(function()
		root = getRoot(speaker.Character)
		camera = workspace.CurrentCamera
		if speaker.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild(velocityHandlerName) and root:FindFirstChild(gyroHandlerName) then
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			local VelocityHandler = root:FindFirstChild(velocityHandlerName)
			local GyroHandler = root:FindFirstChild(gyroHandlerName)

			VelocityHandler.MaxForce = v3inf
			GyroHandler.MaxTorque = v3inf
			if not vfly then humanoid.PlatformStand = true end
			GyroHandler.CFrame = camera.CoordinateFrame
			VelocityHandler.Velocity = v3none

			local direction = controlModule:GetMoveVector()
			if direction.X > 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
			end
			if direction.X < 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
			end
			if direction.Z > 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
			end
			if direction.Z < 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((vfly and vehicleflyspeed or iyflyspeed) * 50))
			end
		end
	end)
end

-- Tabs

local Tabs = {
	General = Window:Section({Title = "General", Opened = true}),
	Games = Window:Section({Title = "Games", Opened = false})
}

local TabHandles = {
	Information = Tabs.General:Tab({Title = "Information", Icon = "info"}),
	Appearance = Tabs.General:Tab({Title = "Appearance", Icon = "brush"}),
	Generic = Tabs.General:Tab({Title = "Generic Tools", Icon = "tool-case"}),
	Growagarden = Tabs.Games:Tab({Title = "Grow a Garden", Icon = "land-plot"}),
	nightsintheforest = Tabs.Games:Tab({Title = "99 Nights In The Forest", Icon = "land-plot"}),
	RainbowFriends = Tabs.Games:Tab({Title = "Rainbow Friends", Icon = "land-plot"}),
	BABFT = Tabs.Games:Tab({Title = "Build A Boat For Treasure", Icon = "land-plot"})
}

-- Information
TabHandles.Information:Paragraph(
	{
		Title = "Welcome to JTD Hub!",
		Desc = "Welcome to JTD Hub, the best exploit collection! Generic exploits can be found in the Generic section, however game-specific exploits have their own tab. You can easily find the tab for the current game with the search bar!",
		Image = "component",
		ImageSize = 20,
		Color = Color3.fromHex("#30ff6a")
	}
)

TabHandles.Information:Button(
	{
		Title = "Join the Discord",
		Locked = false,
		Callback = function()
			local DiscordInvite = "https://discord.gg/28P4CwDqMX"
			fsetclipboard(DiscordInvite)
			WindUI:Notify(
				{
					Title = "Copied!",
					Content = "Discord link copied to clipboard",
					Duration = 2
				}
			)
		end
	}
)

-- End Information

-- Appearance

TabHandles.Appearance:Paragraph(
	{
		Title = "Customize Interface",
		Desc = "Personalize your experience",
		Image = "palette",
		ImageSize = 20,
		Color = "White"
	}
)

local themes = {}
for themeName, _ in pairs(WindUI:GetThemes()) do
	table.insert(themes, themeName)
end
table.sort(themes)

local canchangetheme = true
local canchangedropdown = true

local themeDropdown =
	TabHandles.Appearance:Dropdown(
		{
			Title = "Select Theme",
			Values = themes,
			Value = "Dark",
			Callback = function(theme)
				canchangedropdown = false
				WindUI:SetTheme(theme)
				WindUI:Notify(
					{
						Title = "Theme Applied",
						Content = theme,
						Icon = "palette",
						Duration = 2
					}
				)
				canchangedropdown = true
			end
		}
	)

local transparencySlider =
	TabHandles.Appearance:Slider(
		{
			Title = "Window Transparency",
			Value = {
				Min = 0,
				Max = 1,
				Default = 0.2
			},
			Step = 0.1,
			Callback = function(value)
				WindUI.TransparencyValue = tonumber(value)
				Window:ToggleTransparency(tonumber(value) > 0)
			end
		}
	)

local ThemeToggle =
	TabHandles.Appearance:Toggle(
		{
			Title = "Enable Dark Mode",
			Desc = "Use dark color scheme",
			Value = true,
			Callback = function(state)
				if canchangetheme then
					WindUI:SetTheme(state and "Dark" or "Light")
				end
				if canchangedropdown then
					themeDropdown:Select(state and "Dark" or "Light")
				end
			end
		}
	)

WindUI:OnThemeChange(
	function(theme)
		canchangetheme = false
		ThemeToggle:Set(theme == "Dark")
		canchangetheme = true
	end
)

TabHandles.Appearance:Button(
	{
		Title = "Create New Theme",
		Icon = "plus",
		Callback = function()
			Window:Dialog(
				{
					Title = "Create Theme",
					Content = "This feature is coming soon!",
					Buttons = {
						{
							Title = "OK",
							Variant = "Primary"
						}
					}
				}
			)
		end
	}
)

-- End Appearance

-- Generic

TabHandles.Generic:Paragraph(
	{
		Title = "Generic Functions",
		Desc = "A list of generic functions that will work in almost every game.",
		Image = "globe",
		ImageSize = 20,
		Color = "White"
	}
)

TabHandles.Generic:Button(
	{
		Title = "Load Infinite Yield FE",
		Desc = "Infinite Yield FE is a powerful FE admin script for Roblox that brings a host of exciting features for developers and players.",
		Locked = false,
		Callback = function()
			loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
		end
	}
)

TabHandles.Generic:Divider()

TabHandles.Generic:Button(
	{
		TItle = "Jork Tool",
		Desc = "in the stripped club. straight up \"jorking it\" . and by \"it\" , haha, well. let's just say. My peanits.",
		Locked = false,
		Callback = function()
			local speaker = game.Players.LocalPlayer
			local humanoid = speaker.Character:FindFirstChildWhichIsA("Humanoid")
			local backpack = speaker:FindFirstChildWhichIsA("Backpack")
			if not humanoid or not backpack then return end

			local tool = Instance.new("Tool")
			tool.Name = "Jerk Off"
			tool.ToolTip = "in the stripped club. straight up \"jorking it\" . and by \"it\" , haha, well. let's justr say. My peanits."
			tool.RequiresHandle = false
			tool.Parent = backpack

			local jorkin = false
			local track = nil

			local function stopTomfoolery()
				jorkin = false
				if track then
					track:Stop()
					track = nil
				end
			end

			tool.Equipped:Connect(function() jorkin = true end)
			tool.Unequipped:Connect(stopTomfoolery)
			humanoid.Died:Connect(stopTomfoolery)

			while task.wait() do
				if not jorkin then continue end

				local isR15 = r15(speaker)
				if not track then
					local anim = Instance.new("Animation")
					anim.AnimationId = not isR15 and "rbxassetid://72042024" or "rbxassetid://698251653"
					track = humanoid:LoadAnimation(anim)
				end

				track:Play()
				track:AdjustSpeed(isR15 and 0.7 or 0.65)
				track.TimePosition = 0.6
				task.wait(0.1)
				while track and track.TimePosition < (not isR15 and 0.65 or 0.7) do task.wait(0.1) end
				if track then
					track:Stop()
					track = nil
				end
			end
		end,
	}
)

TabHandles.Generic:Slider({
	Title = "Walkspeed",
	Step = 1,

	Value = {
		Min = 0,
		Max = 120,
		Default = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed,
	},
	Callback = function(value)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = value
	end
})

TabHandles.Generic:Slider({
	Title = "Jumpheight",
	Step = 1,

	Value = {
		Min = 0,
		Max = 120,
		Default = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpHeight,
	},
	Callback = function(value)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpHeight = value
	end
})

TabHandles.Generic:Button(
	{
		Title = "Drop all tools",
		Desc = "Drops all your tools from your backpack",
		Locked = false, 
		Callback = function()
			for i,v in pairs(Players.LocalPlayer.Backpack:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = Players.LocalPlayer.Character
				end
			end
			wait()
			for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = workspace
				end
			end
		end,
	}
)

TabHandles.Generic:Toggle({
	Title = "Player Tracers",
	Desc = "Toggle Player Tracers on or off",
	Default = false,
	Callback = function(state) 
		if state then
			for i, player in ipairs(Players:GetPlayers()) do
				local beam = Instance.new("Beam")
				beam.Parent = Players.LocalPlayer.Character
				beam.Attachment0 = Players.LocalPlayer.Character.HumanoidRootPart.RootAttachment
				beam.Attachment1 = player.Character.HumanoidRootPart.RootAttachment
				beam.Name = "HackBeamJTD"
			end
		else
			for i, beam in ipairs(Players.LocalPlayer.Character:GetChildren()) do
				if beam.Name == "HackBeamJTD" then
					beam:Destroy()
				end
			end
		end
	end
})

local antifling
TabHandles.Generic:Toggle({
	Title = "AntiFling",
	Desc = "Toggle AntiFling on or off",
	Default = false,
	Callback = function(state) 
		if state then
			if antifling then
				antifling:Disconnect()
				antifling = nil
			end
			antifling = RunService.Stepped:Connect(function()
				for _, player in pairs(Players:GetPlayers()) do
					if player ~= Players.LocalPlayer and player.Character then
						for _, v in pairs(player.Character:GetDescendants()) do
							if v:IsA("BasePart") then
								v.CanCollide = false
							end
						end
					end
				end
			end)
		else
			if antifling then
				antifling:Disconnect()
				antifling = nil
			end
		end
	end
})

TabHandles.Generic:Button({
	Title = "Server Hop",
	Desc = "Join another server",
	Locked = false,
	Callback = function()
		local servers = {}
		local req = game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true")
		local body = HttpService:JSONDecode(req)

		if body and body.data then
			for i, v in next, body.data do
				if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers then
					table.insert(servers, 1, v.id)
				end
			end
		end

		if #servers > 0 then
			game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], Players.LocalPlayer)
		else
			return NotifyMessage("Couldn't find a server to serverhop.")
		end
	end
})

local Noclipping = nil
local Clip
local floatName = randomString()
TabHandles.Generic:Toggle({
	Title = "Noclip",
	Desc = "Enabled/disables noclipping",
	Default = false,
	Callback = function(state) 
		local speaker = Players.LocalPlayer
		if state then
			Clip = false
			wait(0.1)
			local function NoclipLoop()
				if Clip == false and speaker.Character ~= nil then
					for _, child in pairs(speaker.Character:GetDescendants()) do
						if child:IsA("BasePart") and child.CanCollide == true and child.Name ~= floatName then
							child.CanCollide = false
						end
					end
				end
			end
			Noclipping = RunService.Stepped:Connect(NoclipLoop)
			NotifyMessage('Noclip Enabled')
		else
			if Noclipping then
				Noclipping:Disconnect()
			end
			Clip = true
			NotifyMessage('Noclip Disabled')
		end
	end
})

local speaker = Players.LocalPlayer

TabHandles.Generic:Toggle({
	Title = "FlingPart",
	Desc = "Enabled/disables flingpart",
	Default = false,
	Callback = function(state) 
		if state then
			local ch = speaker.Character
			ch:FindFirstChildWhichIsA("Humanoid"):SetStateEnabled(Enum.HumanoidStateType.Dead, false)
			local prt=Instance.new("Model")
			prt.Parent = speaker.Character
			local z1 = Instance.new("Part")
			z1.Name="Torso"
			z1.CanCollide = false
			z1.Anchored = true
			local z2 = Instance.new("Part")
			z2.Name="Head"
			z2.Parent = prt
			z2.Anchored = true
			z2.CanCollide = false
			local z3 =Instance.new("Humanoid")
			z3.Name="Humanoid"
			z3.Parent = prt
			z1.Position = Vector3.new(0,9999,0)
			speaker.Character=prt
			wait(3)
			speaker.Character=ch
			wait(3)
			local Hum = Instance.new("Humanoid")
			z2:Clone()
			Hum.Parent = speaker.Character
			local root =  getRoot(speaker.Character)
			for i,v in pairs(speaker.Character:GetChildren()) do
				if v ~= root and  v.Name ~= "Humanoid" then
					v:Destroy()
				end
			end
			root.Transparency = 0
			root.Color = Color3.new(1, 1, 1)
			local invisflingStepped
			invisflingStepped = RunService.Stepped:Connect(function()
				if speaker.Character and getRoot(speaker.Character) then
					getRoot(speaker.Character).CanCollide = false
				else
					invisflingStepped:Disconnect()
				end
			end)
			sFLY()
			workspace.CurrentCamera.CameraSubject = root
			local bambam = Instance.new("BodyThrust")
			bambam.Parent = getRoot(speaker.Character)
			bambam.Force = Vector3.new(99999,99999*10,99999)
			bambam.Location = getRoot(speaker.Character).Position
		else

		end
	end
})

TabHandles.Generic:Slider({
	Title = "Flyspeed",
	Step = 1,

	Value = {
		Min = 0,
		Max = 120,
		Default = iyflyspeed,
	},
	Callback = function(value)
		iyflyspeed = value
	end
})

TabHandles.Generic:Toggle({
	Title = "Fly",
	Desc = "Makes you fly",
	Default = false,
	Callback = function(state) 
		if state then
			if not IsOnMobile then
				NOFLY()
				wait()
				sFLY()
			else
				mobilefly(speaker)
			end
		else
			if not IsOnMobile then NOFLY() else unmobilefly(speaker) end
		end
	end
})

-- BABFT

local babftautofarm = false
local babftfirstrun = true

function babftrun()
	local plr = game:GetService("Players").LocalPlayer
	local stageFolder = workspace.BoatStages.NormalStages
	local goldVar = plr.Data.Gold
	local runTimeA = 0
	local trig = stageFolder.TheEnd.GoldenChest.Trigger
	local mainPos = trig.CFrame

	local function reset()
		pcall(function()
			if plr.Character and plr.Character:FindFirstChildWhichIsA("Humanoid") then
				plr.Character.PrimaryPart.CFrame = CFrame.new(0,-10000,0,1,0,0,0,1,0,0,0,1)
				plr.Character.Head:Destroy()
				plr.Character.PrimaryPart:Destroy()
				task.wait(1)
			end
		end)
	end
	for stage = 2, 9 do
		holdPart = Instance.new("Part",workspace)
		holdPart.Size = Vector3.new(5,1,5)
		holdPart.Anchored = true
		holdPart.Name = 'HoldPartAFK'
		local stageP = stageFolder["CaveStage"..stage].DarknessPart
		stageP.Transparency = 0.75
		holdPart.CFrame = stageP.CFrame-Vector3.new(0,4,0)
	end 

	local function collectGold()
		workspace:WaitForChild("ClaimRiverResultsGold"):FireServer()
	end
	local function getChest()
		if plr.Character and plr.Character.PrimaryPart and plr.Character.Humanoid.Health > 0 then
			trig.CFrame = plr.Character.PrimaryPart.CFrame
			task.wait(0.3)
			trig.CFrame = mainPos
		end
	end

	local function claimStage(stage)
		repeat
			task.wait(0.1)
		until plr.Character and plr.Character.Head and plr.Character.PrimaryPart and plr.Character.Humanoid.Health > 0
		local lastGold = goldVar.Value
		local stageP = stageFolder["CaveStage"..stage].DarknessPart
		if stage ~= 3 then
			pcall(function()
				plr.Character.PrimaryPart.CFrame = stageP.CFrame
				local iters = 0
				while task.wait(0.1) do
					iters += 1
					if iters >= 100 then
						reset()
						break
					end
					collectGold()
					if goldVar.Value ~= lastGold then
						break
					end
				end
			end)
		else
			pcall(function()
				plr.Character.PrimaryPart.CFrame = stageP.CFrame
				task.wait(2)
				getChest()
				task.wait(1)
				collectGold()
				return
			end)
		end
	end
	local function run()
		for i=2,9 do
			claimStage(i)
		end
	end
	task.spawn(function()
		while true do
			if autofarm then
				reset()
				pcall(function()
					run()
				end)
				task.wait(0.1)
			end
		end
	end)
end

TabHandles.BABFT:Toggle({
	Title = "Toggle AutoFarm",
	Desc = "Enable/Disable autofarming",
	Default = false,
	Callback = function(state) 
		if babftfirstrun == true then
			babftrun()
			babftfirstrun = false
		end
		autofarm = state
	end
})
